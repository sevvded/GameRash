@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "GameRash - Oyun Mağazası";
}

<div class="container-fluid">
    <!-- Hero Section -->
    <div class="hero-section text-center py-5 mb-4">
        <h1 class="display-3 fw-bold text-white mb-3">🎮 GameRash</h1>
        <p class="lead text-white-50 mb-4">En iyi oyunları keşfedin ve satın alın</p>
        <div class="search-box">
            <input type="text" class="form-control form-control-lg" placeholder="Oyun ara..." id="searchInput">
        </div>
    </div>

    <!-- Games Grid -->
    <div class="row" id="gamesGrid">
        @foreach (var game in Model)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4 game-card" data-title="@game.Title.ToLower()">
                <div class="card h-100 game-card-inner">
                    <div class="card-img-top-container">
                        <img src="@(string.IsNullOrEmpty(game.CoverImage) ? "/images/indir.jpeg" : "/images/" + game.CoverImage)" 
                             class="card-img-top" alt="@game.Title" 
                             onerror="this.src='/images/indir.jpeg'">
                        <div class="card-overlay">
                            <div class="overlay-buttons">
                                <button class="btn btn-primary btn-sm" onclick="addToLibrary(@game.GameID)">
                                    <i class="fas fa-shopping-cart me-1"></i>Satın Al
                                </button>
                                <button class="btn btn-outline-light btn-sm" onclick="addToWishlist(@game.GameID)">
                                    <i class="fas fa-heart me-1"></i>İstek Listesi
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@game.Title</h5>
                        <p class="card-text text-muted small">@game.DeveloperName</p>
                        <p class="card-text">@(game.Description.Length > 100 ? game.Description.Substring(0, 100) + "..." : game.Description)</p>
                        
                        <div class="mt-auto">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <div class="rating">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= game.AverageRating)
                                        {
                                            <i class="fas fa-star text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-star text-warning"></i>
                                        }
                                    }
                                    <span class="ms-1 text-muted small">(@game.ReviewCount)</span>
                                </div>
                                <span class="price fw-bold text-success">₺@game.Price.ToString("F2")</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- No Results Message -->
    <div id="noResults" class="text-center py-5" style="display: none;">
        <i class="fas fa-search fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">Aradığınız oyun bulunamadı</h4>
        <p class="text-muted">Farklı anahtar kelimeler deneyin</p>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('searchInput').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const gameCards = document.querySelectorAll('.game-card');
            let visibleCount = 0;

            gameCards.forEach(card => {
                const title = card.dataset.title;
                if (title.includes(searchTerm)) {
                    card.style.display = 'block';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });

            const noResults = document.getElementById('noResults');
            if (visibleCount === 0 && searchTerm !== '') {
                noResults.style.display = 'block';
            } else {
                noResults.style.display = 'none';
            }
        });

        function addToLibrary(gameId) {
            fetch('/Library/AddToLibrary', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ GameId: gameId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Oyun kütüphaneye eklendi!');
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Bir hata oluştu');
            });
        }

        function addToWishlist(gameId) {
            fetch('/Wishlist/AddToWishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ GameId: gameId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Oyun istek listesine eklendi!');
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Bir hata oluştu');
            });
        }
    </script>
}
